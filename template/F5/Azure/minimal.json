{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "6.0.4.0",
    "parameters": {
        "adminUsername": {
            "defaultValue": "azureuser",
            "metadata": {
                "description": "User name for the Virtual Machine."
            },
            "type": "string"
        },
        "authenticationType": {
            "allowedValues": [
                "password",
                "sshPublicKey"
            ],
            "defaultValue": "password",
            "metadata": {
                "description": "Type of authentication to use on the Virtual Machine, password based authentication or key based authentication."
            },
            "type": "string"
        },
        "adminPasswordOrKey": {
            "metadata": {
                "description": "Password or SSH public key to login to the Virtual Machine. Note: There are a number of special characters that you should avoid using for F5 product user accounts.  See [K2873](https://support.f5.com/csp/article/K2873) for details. Note: If using key-based authentication, this should be the public key as a string, typically starting with **---- BEGIN SSH2 PUBLIC KEY ----** and ending with **---- END SSH2 PUBLIC KEY ----**."
            },
            "type": "securestring"
        },
        "adminPassword": {
            "metadata": {
                "description": "Admin password to login to the Virtual Machine. Note: There are a number of special characters that you should avoid using for F5 product user accounts.  See [K2873](https://support.f5.com/csp/article/K2873) for details. Note: If using key-based authentication, this should be the public key as a string, typically starting with **---- BEGIN SSH2 PUBLIC KEY ----** and ending with **---- END SSH2 PUBLIC KEY ----**."
            },
            "type": "securestring"
        },
        "instanceName": {
            "defaultValue": "f5vm01",
            "metadata": {
                "description": "Name of the Virtual Machine."
            },
            "type": "string"
        },
        "instanceType": {
            "allowedValues": [
                "Standard_A3",
                "Standard_A4",
                "Standard_A5",
                "Standard_A6",
                "Standard_A7",
                "Standard_D3",
                "Standard_D4",
                "Standard_D11",
                "Standard_D12",
                "Standard_D13",
                "Standard_D14",
                "Standard_DS3",
                "Standard_DS4",
                "Standard_DS11",
                "Standard_DS12",
                "Standard_DS13",
                "Standard_DS14",
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_D5_v2",
                "Standard_D11_v2",
                "Standard_D12_v2",
                "Standard_D13_v2",
                "Standard_D14_v2",
                "Standard_D15_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_DS11_v2",
                "Standard_DS12_v2",
                "Standard_DS13_v2",
                "Standard_DS14_v2",
                "Standard_DS15_v2",
                "Standard_F4",
                "Standard_F8",
                "Standard_F4S",
                "Standard_F8S",
                "Standard_F16S",
                "Standard_G3",
                "Standard_G4",
                "Standard_G5",
                "Standard_GS3",
                "Standard_GS4",
                "Standard_GS5"
            ],
            "defaultValue": "Standard_DS3_v2",
            "metadata": {
                "description": "Instance size of the Virtual Machine."
            },
            "type": "string"
        },
        "imageName": {
            "allowedValues": [
                "Best25Mbps",
                "Best200Mbps",
                "Best1Gbps",
                "Better25Mbps",
                "Better200Mbps",
                "Better1Gbps",
                "Good25Mbps",
                "Good200Mbps",
                "Good1Gbps",
                "AdvancedWaf25Mbps",
                "AdvancedWaf200Mbps",
                "AdvancedWaf1Gbps",
                "PerAppVeLTM25Mbps",
                "PerAppVeLTM200Mbps",
                "PerAppVeAdvancedWaf25Mbps",
                "PerAppVeAdvancedWaf200Mbps"
            ],
            "defaultValue": "Best1Gbps",
            "metadata": {
                "description": "F5 SKU (image) to you want to deploy. Note: The disk size of the VM will be determined based on the option you select.  **Important**: If intending to provision multiple modules, ensure the appropriate value is selected, such as **Best** instead of **Good**."
            },
            "type": "string"
        },
        "bigIpVersion": {
            "allowedValues": [
                "13.1.100000",
                "12.1.303000",
                "latest"
            ],
            "defaultValue": "13.1.100000",
            "metadata": {
                "description": "F5 BIG-IP version you want to use."
            },
            "type": "string"
        },
        "availabilitySetName": {
            "defaultValue": "my_avset",
            "metadata": {
                "description": "specify the name of the existing Availability Set you want to use."
            },
            "type": "string"
        },
        "tagValues": {
            "defaultValue": {
                "application": "APP",
                "cost": "COST",
                "environment": "ENV",
                "group": "GROUP",
                "owner": "OWNER"
            },
            "metadata": {
                "description": "Default key/value resource tags will be added to the resources in this deployment, if you would like the values to be unique adjust them as needed for each key."
            },
            "type": "object"
        },
        "vnetName": {
            "metadata": {
                "description": "The name of the existing virtual network to which you want to connect the BIG-IP VEs."
            },
            "type": "string"
        },
        "vnetResourceGroupName": {
            "metadata": {
                "description": "The name of the resource group that contains the Virtual Network where the BIG-IP VE will be placed."
            },
            "type": "string"
        },
        "mgmtIpAddress": {
            "metadata": {
                "description": "MGMT subnet IP Address to use for the BIG-IP management IP address."
            },
            "type": "string"
        },
        "mgmtNicName": {
            "metadata": {
                "description": "MGMT NIC to use for the BIG-IP management interface."
            },
            "type": "string"
        },
        "extNicName": {
            "metadata": {
                "description": "EXT NIC to use for the BIG-IP external interface."
            },
            "type": "string"
        }
    },
    "variables": {
        "paygImageMap": {
            "advancedwaf1gbps": {
                "offer": "f5-big-ip-advanced-waf",
                "sku": "f5-bigip-virtual-edition-1g-waf-hourly"
            },
            "advancedwaf200mbps": {
                "offer": "f5-big-ip-advanced-waf",
                "sku": "f5-bigip-virtual-edition-200m-waf-hourly"
            },
            "advancedwaf25mbps": {
                "offer": "f5-big-ip-advanced-waf",
                "sku": "f5-bigip-virtual-edition-25m-waf-hourly"
            },
            "best1gbps": {
                "offer": "f5-big-ip-best",
                "sku": "f5-bigip-virtual-edition-1g-best-hourly"
            },
            "best200mbps": {
                "offer": "f5-big-ip-best",
                "sku": "f5-bigip-virtual-edition-200m-best-hourly"
            },
            "best25mbps": {
                "offer": "f5-big-ip-best",
                "sku": "f5-bigip-virtual-edition-25m-best-hourly"
            },
            "better1gbps": {
                "offer": "f5-big-ip-better",
                "sku": "f5-bigip-virtual-edition-1g-better-hourly"
            },
            "better200mbps": {
                "offer": "f5-big-ip-better",
                "sku": "f5-bigip-virtual-edition-200m-better-hourly"
            },
            "better25mbps": {
                "offer": "f5-big-ip-better",
                "sku": "f5-bigip-virtual-edition-25m-better-hourly"
            },
            "good1gbps": {
                "offer": "f5-big-ip-good",
                "sku": "f5-bigip-virtual-edition-1g-good-hourly"
            },
            "good200mbps": {
                "offer": "f5-big-ip-good",
                "sku": "f5-bigip-virtual-edition-200m-good-hourly"
            },
            "good25mbps": {
                "offer": "f5-big-ip-good",
                "sku": "f5-bigip-virtual-edition-25m-good-hourly"
            },
            "perappveadvancedwaf200mbps": {
                "offer": "f5-big-ip-per-app-ve",
                "sku": "f5-big-ip-per-app-ve-awf-200m-hourly"
            },
            "perappveadvancedwaf25mbps": {
                "offer": "f5-big-ip-per-app-ve",
                "sku": "f5-big-ip-per-app-ve-awf-25m-hourly"
            },
            "perappveltm200mbps": {
                "offer": "f5-big-ip-per-app-ve",
                "sku": "f5-big-ip-per-app-ve-ltm-200m-hourly"
            },
            "perappveltm25mbps": {
                "offer": "f5-big-ip-per-app-ve",
                "sku": "f5-big-ip-per-app-ve-ltm-25m-hourly"
            }
        },
        "computeApiVersion": "2017-12-01",
        "location": "[resourceGroup().location]",
        "adminPasswordOrKey": "[replace(parameters('adminPasswordOrKey'),'\\n', '\n')]",
        "adminPassword": "[replace(parameters('adminPassword'),'\\n', '\n')]",
        "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
                "publicKeys": [
                    {
                        "keyData": "[variables('adminPasswordOrKey')]",
                        "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]"
                    }
                ]
            }
        },
        "subscriptionID": "[subscription().subscriptionId]",
        "resourceGroupName": "[resourceGroup().name]",
        "singleQuote": "'",
        "dnsLabel": "[toLower(parameters('dnsLabel'))]",
        "imageNameToLower": "[toLower(parameters('imageName'))]",
        "skuToUse": "[variables('paygImageMap')[variables('imageNameToLower')]['sku']]",
        "offerToUse": "[variables('paygImageMap')[variables('imageNameToLower')]['offer']]",
        "imagePlan": {
            "name": "[variables('skuToUse')]",
            "product": "[variables('offerToUse')]",
            "publisher": "f5-networks"
        },
        "imageReference": {
            "offer": "[variables('offerToUse')]",
            "publisher": "f5-networks",
            "sku": "[variables('skuToUse')]",
            "version": "[parameters('bigIpVersion')]"
        },
        "instanceName": "[toLower(parameters('instanceName'))]",
        "virtualNetworkName": "[parameters('vnetName')]",
        "vnetId": "[resourceId(parameters('vnetResourceGroupName'),'Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
        "publicIPAddressType": "Static",
        "mgmtPublicIPAddressName": "[concat(variables('dnsLabel'), '-mgmt-pip')]",
        "mgmtPublicIPAddressId": "[resourceId('Microsoft.Network/publicIPAddresses', variables('mgmtPublicIPAddressName'))]",
        "mgmtNsgID": "[resourceId('Microsoft.Network/networkSecurityGroups/',concat(variables('dnsLabel'),'-mgmt-nsg'))]",
        "mgmtNicID": "[resourceId('Microsoft.Network/NetworkInterfaces', parameters('mgmtNicName'))]",
        "mgmtSubnetId": "[concat(variables('vnetId'), '/subnets/', parameters('mgmtSubnetName'))]",
        "mgmtSubnetPrivateAddress": "[parameters('mgmtIpAddress')]",
        "extNicName": "[parameters('extNicName')]",
        "intNicName": "[concat(variables('dnsLabel'), '-int')]",
        "tagValues": "[parameters('tagValues')]",
        "newDataStorageAccountName": "[concat(uniqueString(variables('dnsLabel'), resourceGroup().id, deployment().name), 'data000')]",
        "dataStorageAccountType": "Standard_LRS",
        "deploymentId": "[concat(variables('subscriptionId'), resourceGroup().id, deployment().name, variables('dnsLabel'))]",
        "osProfiles": {
            "password": {
                "adminPassword": "[variables('adminPasswordOrKey')]",
                "adminUsername": "[parameters('adminUsername')]",
                "computerName": "[variables('instanceName')]",
                "linuxConfiguration": "[json('null')]"
            },
            "sshPublicKey": {
                "adminUsername": "[parameters('adminUsername')]",
                "computerName": "[variables('instanceName')]",
                "linuxConfiguration": "[variables('linuxConfiguration')]"
            }
        },
        "availabilitySetName": "[parameters('availabilitySetName')]",
        "f5ODTag": "f5-declarative-onboarding-1.3.0-4.noarch.rpm",
        "f5AS3Tag": "f5-appsvcs-3.10.0-5.noarch.rpm",
        "script_declaratavive_onboarding": "[concat('FN=', variables('f5ODTag'), '\nCREDS=admin:', variables('adminPassword'), '\nIP=', variables('mgmtSubnetPrivateAddress'), '\nDATA=\"{\\\"operation\\\":\\\"INSTALL\\\",\\\"packageFilePath\\\":\\\"/var/config/rest/downloads/$FN\\\"}\"\n/usr/bin/tmsh modify auth user admin password ', variables('adminPassword'), '\ncd /var/lib/waagent/custom-script/download/\ncp `ls -r | head -1`/f5-declarative-onboarding-* /var/config/rest/downloads/\ncurl -kvu $CREDS \"https://$IP/mgmt/shared/iapp/package-management-tasks\" -H \"Origin: https://$IP\" -H \"Content-Type: application/json;charset=UTF-8\" --data $DATA\ncurl -sku $CREDS https://$IP/mgmt/shared/declarative-onboarding\n')]",
        "install_declaratavive_onboarding": "[concat(variables('singleQuote'), '#!/bin/bash\n', variables('script_declaratavive_onboarding'), variables('singleQuote'))]",
        "script_as3": "[concat('FN=', variables('f5ODTag'), '\nCREDS=admin:', variables('adminPassword'), '\nIP=', variables('mgmtSubnetPrivateAddress'), '\nDATA=\"{\\\"operation\\\":\\\"INSTALL\\\",\\\"packageFilePath\\\":\\\"/var/config/rest/downloads/$FN\\\"}\"\n/usr/bin/tmsh modify auth user admin password ', variables('adminPassword'), '\ncd /var/lib/waagent/custom-script/download/\ncp `ls -r | head -1`/f5-declarative-onboarding-* /var/config/rest/downloads/\ncurl -kvu $CREDS \"https://$IP/mgmt/shared/iapp/package-management-tasks\" -H \"Origin: https://$IP\" -H \"Content-Type: application/json;charset=UTF-8\" --data $DATA\ncurl -sku $CREDS https://$IP/mgmt/shared/declarative-onboarding\n')]",
        "install_as3": "[concat(variables('singleQuote'), '#!/bin/bash\n', variables('install_declaratavive_onboarding'), variables('singleQuote'))]",
    },
    "resources": [
        {
            "apiVersion": "[variables('computeApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('newDataStorageAccountName'))]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]",
                "[variables('newCustomImageName')]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('mgmtNicName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('extNicName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('intNicName'))]"
            ],
            "location": "[variables('location')]",
            "name": "[variables('instanceName')]",
            "plan": "[if(variables('useCustomImage'), json('null'), variables('imagePlan'))]",
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('newDataStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('instanceType')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('mgmtNicName'))]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('extNicName'))]",
                            "properties": {
                                "primary": false
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('intNicName'))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                },
                "osProfile": "[variables('osProfiles')[parameters('authenticationType')]]",
                "storageProfile": "[if(variables('useCustomImage'), variables('storageProfileArray').customImage, variables('storageProfileArray').platformImage)]"
            },
            "tags": "[if(empty(variables('tagValues')), json('null'), variables('tagValues'))]",
            "type": "Microsoft.Compute/virtualMachines"
        },
        {
            "apiVersion": "[variables('computeApiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('instanceName'))]"
            ],
            "location": "[variables('location')]",
            "name": "[concat(variables('instanceName'),'/start')]",
            "properties": {
                "protectedSettings": {
                    "commandToExecute": "[concat('echo -e ', variables('install_declaratavive_onboarding'), ' >> /config/install_declaratavive_onboarding.sh; bash /config/install_declaratavive_onboarding.sh; echo -e ', variables('install_as3'), ' >> /config/install_as3.sh; bash /config/install_as3.sh')]"
                },
                "publisher": "Microsoft.Azure.Extensions",
                "settings": {
                    "fileUris": [
                        "[concat('https://raw.githubusercontent.com/F5Networks/f5-declarative-onboarding/master/dist/', variables('f5ODTag'))]",
                        "[concat('https://raw.githubusercontent.com/F5Networks/f5-appsvcs-extension/master/dist/latest/', variables('f5AS3Tag'))]"
                    ]
                },
                "type": "CustomScript",
                "typeHandlerVersion": "2.0"
            },
            "tags": "[if(empty(variables('tagValues')), json('null'), variables('tagValues'))]",
            "type": "Microsoft.Compute/virtualMachines/extensions"
        }
    ]
}